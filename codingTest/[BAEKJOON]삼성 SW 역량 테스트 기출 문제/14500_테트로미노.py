# 테트로미노

# 폴리오미노란 크기가 1×1인 정사각형을 여러 개 이어서 붙인 도형

# 정사각형은 서로 겹치면 안 된다.
# 도형은 모두 연결되어 있어야 한다.
# 정사각형의 변끼리 연결되어 있어야 한다.
# 즉, 꼭짓점과 꼭짓점만 맞닿아 있으면 안 된다.
# 정사각형 4개를 이어 붙인 폴리오미노

# 크기가 N×M인 종이 위에 테트로미노 하나를 놓으려고 한다.
# 종이는 1×1 크기의 칸으로 나누어져 있으며,
# 각각의 칸에는 정수가 하나 쓰여 있다.

# 테트로미노 하나를 적절히 놓아서
# 테트로미노가 놓인 칸에 쓰여 있는 수들의 합을 최대로 하는 프로그램

# 테트로미노는 반드시 한 정사각형이 정확히 하나의 칸을 포함하도록 놓아야 하며
# 회전이나 대칭을 시켜도 된다.

n, m = map(int ,input().split())
board = [list(map(int, input().split())) for _ in range(n)]


tetromino = [
    [(0,0), (0,1), (1,0), (1,1)], # ㅁ
    [(0,0), (0,1), (0,2), (0,3)], # ㅡ
    [(0,0), (1,0), (2,0), (3,0)], # ㅣ
    [(0,0), (0,1), (0,2), (1,0)],
    [(1,0), (1,1), (1,2), (0,2)],
    [(0,0), (1,0), (1,1), (1,2)], # ㄴ
    [(0,0), (0,1), (0,2), (1,2)], # ㄱ
    [(0,0), (1,0), (2,0), (2,1)],
    [(2,0), (2,1), (1,1), (0,1)],
    [(0,0), (0,1), (1,0), (2,0)],
    [(0,0), (0,1), (1,1), (2,1)],
    [(0,0), (0,1), (0,2), (1,1)], # ㅜ
    [(1,0), (1,1), (1,2), (0,1)], # ㅗ
    [(0,0), (1,0), (2,0), (1,1)], # ㅏ
    [(1,0), (0,1), (1,1), (2,1)], # ㅓ
    [(1,0), (2,0), (0,1), (1,1)],
    [(0,0), (1,0), (1,1), (2,1)],
    [(1,0), (0,1), (1,1), (0,2)],
    [(0,0), (0,1), (1,1), (1,2)]
]


def find(x, y) :
    global answer
    for i in range(19) :
        result = 0
        for j in range(4) :
            try :
                nx = x + tetromino[i][j][0]
                ny = y + tetromino[i][j][1]
                result += board[nx][ny]
            except IndexError :
                continue
        answer = max(answer, result)

def solve() :
    for i in range(n) :
        for j in range(m) :
            find(i, j)

answer = 0
solve()
print(answer)